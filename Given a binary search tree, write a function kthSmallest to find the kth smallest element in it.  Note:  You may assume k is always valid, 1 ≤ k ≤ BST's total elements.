Given a binary search tree, write a function kthSmallest to find the kth smallest element in it.

Note: 
You may assume k is always valid, 1 ≤ k ≤ BST's total elements.
    
    public int kthSmallest(TreeNode root, int k) {
        int count = CountNode(root.left);
        if(k <= count)
            return kthSmallest(root.left,k);
        else
            if(k > count + 1)
                return kthSmallest(root.right, k - 1 - count);
        return root.val;
    }
    
    private int CountNode(TreeNode root){
        if(root == null)
            return 0;
        return 1 + CountNode(root.left) + CountNode(root.right);
    }
