public ListNode sortList(ListNode head) {
        if(head == null || head.next == null)
            return head;
        
        ListNode slow = head, fast = head, firstTail = null;
        while(fast != null && fast.next != null)
        {
            firstTail = slow;
            slow = slow.next;
            fast = fast.next.next;
        }
        firstTail.next = null;
        // split each half to half
        ListNode l1 = sortList(head);
        ListNode l2 = sortList(slow);
        return mergeSort(l1,l2);
    }
    private ListNode mergeSort(ListNode l1, ListNode l2){
        ListNode head = new ListNode(0), temp = head;
        while(l1 != null && l2 != null){
            if(l1.val < l2.val){
                temp.next = l1;
                l1 = l1.next;
            }
            else{
                temp.next = l2;
                l2 = l2.next;
            }
            temp = temp.next;
        }
        if(l1 != null)
            temp.next = l1;
        if(l2 != null)
            temp.next = l2;
        
        return head.next;
    }
